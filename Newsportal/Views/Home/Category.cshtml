@*@model IEnumerable<Newsportal.Models.Post>*@
@model Newsportal.ViewModels.PostsViewModel



@using System
@using System.Security.Cryptography
@using System.Web.DynamicData
@using Newsportal.Models

@{
    ViewBag.Title = "Category";
    Layout = "~/Views/Shared/_LayoutHome.cshtml";
}
@* TODO Implement better way to show category name *@

    <h2 class="text-center mb-5">
        Category: @foreach (var post in Model.PaginatedPosts().Take(1))
        {@post.Category.Name}
         <br/>
         </h2>

@if (!Model.PaginatedPosts().Any())
{
    <h4>No posts in this category</h4>
}

@foreach (var post in Model.PaginatedPosts())
{
    <div class="card mb-4">
        <img class="card-img-top" src="@Url.Content(post.Image)" width="400" />
        <div class="card-body">

            <h2> @Html.ActionLink(post.PostTitle, "Details", "Home", new { id = post.Id }, new { @class = "card-title", style = "color: black;" })</h2>


            <p><b>Category : </b>@Html.ActionLink(@post.Category.Name, "Category", "Home", new { id = post.CategoryId }, new { @class = "badge badge-primary" }) </p>



        </div>
        <div class="card-footer text-muted">
            <p><i class="fa fa-clock-o"></i> @post.AddDate </p>

        </div>
    </div>

}

<nav aria-label="Page navigation">
    <ul class="pagination">
        @for (int i = 1; i <= Model.PageCount(); i++)
        {
            <li class="@(i == Model.CurrentPage ? "page-item active" : "page-item")">
                <a class="page-link" href="@Url.Action("Category", new { page = i })">@i</a>
            </li>
        }
    </ul>
</nav>